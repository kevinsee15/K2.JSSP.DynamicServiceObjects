{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import \"@k2oss/k2-broker-core\";\n\nmetadata = {\n  systemName: \"k2.jssp.dynamicserviceobject\",\n  displayName: \"K2 JSSP Dynamic Service Object\",\n  description: \"An example broker dynamically generates service objects.\",\n  configuration: {\n    \"Columns\": {\n     \"displayName\": \"Columns (Comma Separated)\",\n     \"type\": \"string\"\n    }\n  }\n};\n\nondescribe = async function ({ configuration }): Promise<void> {\n  let columnsCSV: string = <string> configuration[\"Columns\"];\n  let columns: string[] = columnsCSV.split(\",\");\n\n  var schema = {\n    objects: {\n      \"CSVReader\" : {\n        displayName: \"CSV Reader\",\n        description: \"Reads a CSV file and returns the contents as a list.\",\n        properties: {}\n      }\n    }\n  }\n\n  for (let column of columns) {\n    schema.objects.CSVReader.properties[column] = {\n      displayName: column,\n      type: \"string\"\n    };\n  }\n\n  postSchema(schema);\n};\n\nonexecute = async function ({\n  objectName,\n  methodName,\n  parameters,\n  properties,\n  configuration,\n  schema,\n}): Promise<void> {\n  switch (objectName) {\n    case \"todo\":\n      await onexecuteTodo(methodName, properties, parameters);\n      break;\n    default:\n      throw new Error(\"The object \" + objectName + \" is not supported.\");\n  }\n};\n\nasync function onexecuteTodo(\n  methodName: string,\n  properties: SingleRecord,\n  parameters: SingleRecord\n): Promise<void> {\n  switch (methodName) {\n    case \"get\":\n      await onexecuteTodoGet(properties);\n      break;\n    case \"getParams\":\n      await onexecuteTodoGetWithParams(parameters);\n      break;\n    default:\n      throw new Error(\"The method \" + methodName + \" is not supported.\");\n  }\n}\n\nfunction onexecuteTodoGet(properties: SingleRecord): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n      try {\n        if (xhr.readyState !== 4) return;\n        if (xhr.status !== 200)\n          throw new Error(\"Failed with status \" + xhr.status);\n\n        var obj = JSON.parse(xhr.responseText);\n        postResult({\n          id: obj.id,\n          userId: obj.userId,\n          title: obj.title,\n          completed: obj.completed,\n        });\n        resolve();\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    if (typeof properties[\"id\"] !== \"number\")\n      throw new Error('properties[\"id\"] is not of type number');\n    xhr.open(\n      \"GET\",\n      \"https://jsonplaceholder.typicode.com/todos/\" +\n        encodeURIComponent(properties[\"id\"])\n    );\n    xhr.setRequestHeader(\"test\", \"test value\");\n    xhr.send();\n  });\n}\n\nfunction onexecuteTodoGetWithParams(parameters: SingleRecord): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    try {\n      postResult({\n        id: parameters[\"pid\"],\n      });\n      resolve();\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n"],"names":["metadata","systemName","displayName","description","configuration","ondescribe","async","columns","split","schema","objects","properties","column","CSVReader","type","postSchema","onexecute","objectName","methodName","parameters","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","Error","obj","JSON","parse","responseText","postResult","id","userId","title","completed","e","open","encodeURIComponent","setRequestHeader","send","onexecuteTodoGet","onexecuteTodoGetWithParams","onexecuteTodo"],"mappings":"AAEAA,SAAW,CACTC,WAAY,+BACZC,YAAa,iCACbC,YAAa,2DACbC,cAAe,SACF,aACK,iCACP,YAKbC,WAAaC,gBAAgBF,cAAEA,QAEzBG,EAD8BH,EAAa,QACZI,MAAM,SAErCC,EAAS,CACXC,QAAS,WACO,CACZR,YAAa,aACbC,YAAa,uDACbQ,WAAY,UAKb,IAAIC,KAAUL,EACjBE,EAAOC,QAAQG,UAAUF,WAAWC,GAAU,CAC5CV,YAAaU,EACbE,KAAM,UAIVC,WAAWN,IAGbO,UAAYV,gBAAgBW,WAC1BA,EAD0BC,WAE1BA,EAF0BC,WAG1BA,EAH0BR,WAI1BA,EAJ0BP,cAK1BA,EAL0BK,OAM1BA,WAEQQ,OACD,aAQTX,eACEY,EACAP,EACAQ,UAEQD,OACD,YAWT,SAA0BP,UACjB,IAAIS,QAAc,CAACC,EAASC,SAC7BC,EAAM,IAAIC,kBACdD,EAAIE,mBAAqB,kBAEE,IAAnBF,EAAIG,WAAkB,UACP,MAAfH,EAAII,OACN,MAAM,IAAIC,MAAM,sBAAwBL,EAAII,YAE1CE,EAAMC,KAAKC,MAAMR,EAAIS,cACzBC,WAAW,CACTC,GAAIL,EAAIK,GACRC,OAAQN,EAAIM,OACZC,MAAOP,EAAIO,MACXC,UAAWR,EAAIQ,YAEjBhB,IACA,MAAOiB,GACPhB,EAAOgB,KAIqB,iBAArB3B,EAAU,GACnB,MAAM,IAAIiB,MAAM,0CAClBL,EAAIgB,KACF,MACA,8CACEC,mBAAmB7B,EAAU,KAEjCY,EAAIkB,iBAAiB,OAAQ,cAC7BlB,EAAImB,SAxCIC,CAAiBhC,aAEpB,kBA0CT,SAAoCQ,UAC3B,IAAIC,QAAc,CAACC,EAASC,SAE/BW,WAAW,CACTC,GAAIf,EAAU,MAEhBE,IACA,MAAOiB,GACPhB,EAAOgB,MAjDDM,CAA2BzB,uBAG3B,IAAIS,MAAM,cAAgBV,EAAa,uBApBvC2B,CAAc3B,EAAYP,EAAYQ,uBAGtC,IAAIS,MAAM,cAAgBX,EAAa"}